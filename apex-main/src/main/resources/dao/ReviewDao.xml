<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apex.app.dao.ReviewDao">

    <select id="getSubmissionCount" resultType="java.lang.Integer">
        select count(*)
        from submission_base s
        where s.org_id = #{org_id}
    </select>

    <select id="getSubmissionIdList" resultType="java.lang.String">
        select id
        from submission_base s
        where s.org_id = #{org_id}
    </select>

    <insert id="insertPaperAllocation">
        insert into paper_allocation
        (user_id, submission_id, org_id)
        values
        <foreach collection="allocationList" item="allocation" separator=",">
            (#{allocation.userId}, #{allocation.submissionId}, #{allocation.orgId})
        </foreach>
    </insert>

    <delete id="deleteAllocationByOrgId">
        delete
        from paper_allocation
        where org_id = #{org_id}
    </delete>

    <resultMap id="AllocationResultMap" type="com.apex.app.domain.bo.PaperAllocationMapBo">
        <id column="submission_id" property="submissionId"/>
        <collection property="userList" ofType="com.apex.app.domain.model.UserBase">
            <id column="user_id" property="id"/>
            <result column="fullName" property="fullName"/>
            <result column="firstName" property="firstName"/>
            <result column="lastName" property="lastName"/>
            <result column="email" property="email"/>
            <result column="avatar" property="avatar"/>
            <result column="title" property="title"/>
            <result column="enableStatus" property="enableStatus"/>
        </collection>
    </resultMap>

    <select id="getAllocationResult" resultMap="AllocationResultMap">
        select pa.submission_id,
               pa.user_id,
               ub.email,
               ub.full_name     fullName,
               ub.last_name     lastName,
               ub.first_name    firstName,
               ub.avatar,
               ub.title,
               ub.enable_status enableStatus
        from paper_allocation pa
                 left join user_base ub on ub.id = pa.user_id
        where org_id = #{org_id}
    </select>

    <resultMap id="BaseResultMap" type="com.apex.app.domain.model.ReviewTaskOverall">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="org_id" jdbcType="VARCHAR" property="orgId"/>
        <result column="submission_id" jdbcType="VARCHAR" property="submissionId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="deadline" jdbcType="TIMESTAMP" property="deadline"/>
        <result column="decision" jdbcType="TINYINT" property="decision"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
    </resultMap>

    <resultMap id="SubmissionResultMap" type="com.apex.app.domain.model.SubmissionBase">
        <id column="submission_id" property="id"/>
        <result property="title" column="title"/>
        <result property="abstract" column="abstract"/>
        <result property="keywords" column="keywords"/>
        <result property="resourceUrl" column="resource_url"/>
        <result property="publishedTime" column="published_time"/>
        <result property="authors" column="authors"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="orgId" column="org_id"/>
    </resultMap>

    <resultMap id="ReviewTaskResultMap" type="com.apex.app.domain.bo.ReviewTaskInfoBo" extends="BaseResultMap">
        <association property="submissionInfo" resultMap="SubmissionResultMap"/>
    </resultMap>

    <select id="getReviewTaskByUserId" resultMap="ReviewTaskResultMap">
        select rt.id,
        rt.org_id,
        rt.submission_id,
        rt.status,
        rt.deadline,
        rt.decision,
        rt.created_time,
        s.title,
        s.abstracts,
        s.keywords,
        s.resource_url,
        s.published_time,
        s.authors,
        s.contact_email,
        s.org_id
        from paper_allocation pa
        left join submission_base s on s.id = pa.submission_id
        left join review_task_overall rt on pa.submission_id = rt.submission_id
        where pa.org_id = #{org_id}
        and pa.user_id = #{user_id}
        <if test="review_id != null">
            and rt.id = #{review_id}
        </if>
    </select>

    <resultMap id="ReviewSummaryResultMap" type="com.apex.app.domain.bo.ReviewSummaryBo" extends="BaseResultMap">
        <association property="submissionInfo" resultMap="SubmissionResultMap"/>
        <collection property="reviewEvaluationList" ofType="com.apex.app.domain.model.ReviewEvaluation">
            <id column="evaluation_id" jdbcType="BIGINT" property="id"/>
            <result column="user_id" jdbcType="VARCHAR" property="userId" />
            <result column="review_id" jdbcType="VARCHAR" property="reviewId" />
            <result column="review_date" jdbcType="TIMESTAMP" property="reviewDate" />
            <result column="review_index" jdbcType="TINYINT" property="reviewIndex" />
            <result column="overall_evaluation" jdbcType="SMALLINT" property="overallEvaluation" />
            <result column="confidence" jdbcType="TINYINT" property="confidence" />
            <result column="as_short_paper" jdbcType="TINYINT" property="asShortPaper" />
            <result column="active_status" jdbcType="TINYINT" property="activeStatus" />
            <result column="type" jdbcType="TINYINT" property="type" />
            <result column="evaluation_content" jdbcType="LONGVARCHAR" property="evaluationContent"/>
            <result column="confidence_remark" jdbcType="LONGVARCHAR" property="confidenceRemark"/>
        </collection>
        <collection property="reviewerList" ofType="com.apex.app.domain.bo.UserDisplayBo">
            <id column="user_id" jdbcType="VARCHAR" property="id"/>
            <result column="full_name" jdbcType="VARCHAR" property="fullName"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
            <result column="userTitle" jdbcType="VARCHAR" property="title"/>
            <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="enable_status" jdbcType="INTEGER" property="enableStatus"/>
            <result column="first_name" jdbcType="VARCHAR" property="firstName"/>
            <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        </collection>
    </resultMap>

    <select id="getReviewSummary" resultMap="ReviewSummaryResultMap">
        select rto.id,
               rto.org_id,
               rto.submission_id,
               rto.status,
               rto.deadline,
               rto.decision,
               rto.created_time,
               re.id    evaluation_id,
               re.user_id,
               re.review_id,
               re.review_date,
               re.review_index,
               re.overall_evaluation,
               re.confidence,
               re.evaluation_content,
               re.confidence_remark,
               re.as_short_paper,
               re.active_status,
               re.type,
               sb.contact_email,
               sb.authors,
               sb.published_time,
               sb.resource_url,
               sb.keywords,
               sb.abstracts,
               sb.title,
               ub.full_name,
               ub.email,
               ub.title userTitle,
               ub.avatar,
               ub.create_time,
               ub.enable_status,
               ub.first_name,
               ub.last_name
        from review_task_overall rto
                 left join review_evaluation re on re.review_id = rto.id
                 left join submission_base sb on rto.submission_id = sb.id
                 left join user_base ub on re.user_id = ub.id
        where rto.id = #{review_id}
        order by re.review_date ASC, re.review_index ASC
    </select>

    <select id="getConflictInterestUsers" resultType="com.apex.app.domain.bo.UserDisplayBo">
        select ub.id,
               ub.full_name     fullName,
               ub.email,
               ub.create_time   createTime,
               ub.enable_status enableStatus,
               ub.title,
               ub.last_name     lastName,
               ub.first_name    firstName,
               ub.avatar
        from bidding_preference bp
                 left join user_base ub on bp.user_id = ub.id
        where bp.submission_id = #{submission_id}
          and bp.preference = 0
    </select>

    <select id="getEvaluationCounts" resultType="com.apex.app.domain.bo.EvaluationCountsBo">
        select sum(if(r.type = 1, 1, 0)) reviewCount,
               sum(if(r.type = 0, 1, 0)) commentCount
        from review_evaluation r
        where r.review_id = #{review_id}
    </select>

</mapper>